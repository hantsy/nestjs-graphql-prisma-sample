scalar Date

type Post {
  id: ID!
  title: String!
  content: String
  createdAt: Date
  updatedAt: Date
  comments: [Comment]
  author: User
}

type Comment {
  id: ID!
  content: String!
  post: Post
}

type User {
  id: ID!
  email: String!
  name: String
}

type Query {
  getAllPosts(keyword: String = "", skip: Int = 0, take: Int = 25): [Post!]!
  getPostById(id: ID!): Post!
  author(id: ID!): User!
}

input CommentInput {
  content: String!
  postId: String!
}

input CreatePostInput {
  content: String!
  title: String!
}

type Mutation {
  createPost(input: CreatePostInput!): Post!
  addComment(input: CommentInput!): Comment!
}

type Subscription {
  commentAdded: Comment!
}
